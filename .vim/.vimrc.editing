"---------------------------------------------------------------------------
" 編集関連 Edit
"---------------------------------------------------------------------------

" Tabキーを空白に変換
set expandtab

" yeでそのカーソル位置にある単語をレジスタに追加
"nmap ye ;let @"=expand("<cword>")<CR>
" Visualモードでのpで選択範囲をレジスタの内容に置き換える
vnoremap p <Esc>;let current_reg = @"<CR>gvdi<C-R>=current_reg<CR><Esc>

"  Insert mode中で単語単位/行単位の削除をアンドゥ可能にする
"inoremap <C-u>  <C-g>u<C-u>
"inoremap <C-w>  <C-g>u<C-w>

" :Ptでインデントモード切替
"command! Pt :set paste!

" インサートモード中に<C-o>でyankした内容をputする
"inoremap <C-o> <ESC>:<C-U>YRPaste 'p'<CR>i

" インサートモードに入らずに、カーソル行の下もしくは上に空行を挿入します。(countにも対応)
nnoremap <Space>o  :<C-u>for i in range(v:count1) \| call append(line('.'), '') \| endfor<CR>
nnoremap <Space>O  :<C-u>for i in range(v:count1) \| call append(line('.')-1, '') \| endfor<CR>

" カーソルから行頭まで削除
nnoremap <silent> <C-d> d0

" カーソルから行頭まで削除(インサートモード)
inoremap <silent> <C-k> <Esc>lc^
" カーソルから行末まで削除(インサートモード)
inoremap <silent> <C-d> <Esc>lc$
" カーソルから行頭までヤンク(インサートモード)
inoremap <silent> <C-y>e <Esc>ly0<Insert>
" カーソルから行末までヤンク(インサートモード)
inoremap <silent> <C-y>0 <Esc>ly$<Insert>

"全体整形
nnoremap == gg=G

"挿入終了
inoremap <C-j> <ESC>

" 括弧を自動補完
inoremap { {}<LEFT>
inoremap [ []<LEFT>
inoremap ( ()<LEFT>
inoremap " ""<LEFT>

inoremap ' ''<LEFT>
" 選択範囲を囲む
vnoremap { "zdi{<C-R>z}<ESC>
vnoremap [ "zdi[<C-R>z]<ESC>
vnoremap ( "zdi(<C-R>z)<ESC>
vnoremap " "zdi"<C-R>z"<ESC>
vnoremap ' "zdi'<C-R>z'<ESC>

" 括弧入力後改行で適切に配置
inoremap {<Enter> {<Enter>}<ESC><S-o>
inoremap [<Enter> [<Enter>]<ESC><S-o>
inoremap (<Enter> (<Enter>)<ESC><S-o>

augroup space
    autocmd!
    " 保存時に行末の空白を除去する
    autocmd BufWritePre * :%s/\s\+$//ge
    " 保存時にtabをスペースに変換する(shiftwidthやsofttabstopに合わせたい)
    "autocmd BufWritePre * :%s/\t/  /ge
augroup end

" 日時の自動入力
"inoremap <expr> ,df strftime('%Y/%m/%d %H:%M:%S')
"inoremap <expr> ,dd strftime('%Y/%m/%d')
"inoremap <expr> ,dt strftime('%H:%M:%S')

" foldは各FiltTypeにお任せる
" set foldmethod=syntax
" 折りたたみは全て展開した状態で開始する
" set foldlevelstart=99

" Yを行末までのコピーに(D,Cとの一貫性)
nnoremap Y y$

" y9 ydで行末までヤンク
nnoremap y9 y$
" y0 ykで行頭までヤンク
nnoremap y0 y^

" 末尾に追記
nnoremap <C-O> Go

" Enter, BSのmoving設定と対応
nnoremap d<Enter> dG
nnoremap d<BS> dgg

" 貼り付けたテキストの末尾へ自動的に移動する
vnoremap <silent> y y`]
vnoremap <silent> p p`]
nnoremap <silent> p p`]

" テキスト選択して上書き貼り付け時にを削除したテキストでバッファを上書きしない
function! RestoreRegister()
  let @" = s:restore_reg
  return ''
endfunction
function! s:Repl()
  let s:restore_reg = @"
  return "p@=RestoreRegister()\<cr>"
endfunction
vmap <silent> <expr> p <sid>Repl()
